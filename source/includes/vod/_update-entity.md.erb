## Update an entity


> REQUEST

```shell
curl -X PUT \
  <%= config[:endpoint] %>/media/entity \
  -H 'Authorization: <%= config[:token] %>' \
  -H 'Content-Type: application/json' \
  -d '{
    "appId": "<%= config[:app_id] %>",
    "id": "<%= config[:entity_update_id] %>",
    "name": "<%= config[:entity_update_name] %>",
    "description": "<%= config[:entity_update_description] %>",
    "shortDescription":"You can never be as good a dancer as Judson Laipply.",
    "poster": "<%= config[:sample_poster] %>",
    "thumbnail": "<%= config[:sample_thumbnail] %>",
    "extendMetadata":{
        "movie_category":"action",
        "imdb_score":8.8,
        "published_year":"2018"
	}
}'
```

```ruby
require "uiza"

Uiza.app_id = "<%= config[:app_id] %>"
Uiza.authorization = "<%= config[:token] %>"

params = {
  id: "<%= config[:entity_update_id] %>",
  name: "<%= config[:entity_update_name] %>",
  description: "<%= config[:entity_update_description] %>"
}

begin
  entity = Uiza::Entity.update params
  puts entity.id
  puts entity.name
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
import uiza

from uiza.api_resources.entity import Entity
from uiza.exceptions import ServerException

uiza.app_id = "<%= config[:app_id] %>"
uiza.authorization = "<%= config[:token] %>"

entity_data = {
  "id": "<%= config[:entity_update_id] %>",
  "name": "<%= config[:entity_update_name] %>",
  "description": "<%= config[:entity_update_description] %>"
}

try:
  res, status_code = Entity().update(**entity_data)

  print("res: ", res)
except ServerException as e:
  raise e
except Exception as e:
  raise e
```

```php
<?php
require __DIR__."/../vendor/autoload.php";

Uiza\Base::setWorkspaceApiDomain("your-workspace-api-domain.uiza.co");
Uiza\Base::setAuthorization("your-authorization");

try {
  Uiza\Entity::update("your-enity-id", ["name" => "Name change"]);
} catch(\Uiza\Exception\ErrorResponse $e) {
  print($e);
}
?>
```

```java
import java.util.*;
import com.google.gson.*;

import io.uiza.Uiza;
import io.uiza.exception.*;
import io.uiza.model.Entity;
import io.uiza.model.Entity.*;

public class Main {

  public static void main(String[] args) {
    Uiza.workspaceApiDomain = "your-workspace-api-domain.uiza.co";
    Uiza.authorization = "your-authorization";

    Map<String, Object> params = new HashMap<>();
    params.put("name", "Name edited");
    params.put("description", "Description edited");

    try {
      JsonObject response = Entity.update("<entity-id>", params);
      System.out.println(response);
    } catch (UizaException e) {
      System.out.println("Status is: " + e.getStatusCode());
      System.out.println("Message is: " + e.getMessage());
      System.out.println("Description link is: " + e.getDescriptionLink());
    } catch (Exception e) {
      System.out.println(e);
    }
  }
}
```

```javascript
const uiza = require('uiza');
uiza.workspace_api_domain('your-workspace-api-domain.uiza.co');
uiza.authorization('your-authorization-key');

uiza.entity.update('your-entity-id')
  .then((res) => {
    // Identifier of entity has been updated
  }).catch((err) => {
    //Error
  });
```

```go
import (
  uiza "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/entity"
)

func init() {
  Uiza.WorkspaceAPIDomain = "your-workspace-api-domain.uiza.co"
  Uiza.Authorization = "your-authorization"
}

params := &uiza.EntityUpdateParams{
  ID: uiza.String("your-entity-id"),
  Name: uiza.String("Update entity name"),
}
response, err := entity.Update(params)
if err != nil {
  log.Printf("%v\n", err)
} else {
  log.Printf("%v\n", response)
}
```

```csharp
using System;
using Uiza.Net.Configuration;
using Uiza.Net.Enums;
using Uiza.Net.Parameters;
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  WorkspaceApiDomain = "your-workspace-api-domain.uiza.co",
  Authorization = "your-authorization"
});

try
{
  var result =uizaServices.Entity.Update(new UpdateEntityParameter()
  {
    Id = "your-entity-id",
    Name = "Sample update",
    Description = "Description update",
    ShortDescription = "ShortDescription update",
    Poster = "/example.com/updatePoster",
    Thumbnail = "/example.com/updateThumbnail"
  });

  Console.WriteLine(string.Format("Update Entity Id = {0} Success", result.Data.id));
  Console.ReadLine();
}
catch (UizaException ex)
{
  Console.WriteLine(ex.Message);
  Console.ReadLine();
}
```

Updates the specified entity by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the name parameter, that becomes the entityâ€™s new name.
This request accepts mostly the same arguments as the entity creation call.

> RESPONSE

```json
{
  "id": "<%= config[:entity_update_id] %>"
}
```

**HTTP Request**

<span class="put-button"> PUT </span>
```<%= config[:endpoint] %>/media/entity```


**RETURNS**

Returns the entity id if the update succeeded. Returns an error if update parameters are invalid (e.g. specifying an invalid inputType or an invalid metadataId).
